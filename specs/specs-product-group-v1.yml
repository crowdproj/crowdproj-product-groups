openapi: 3.0.4
info:
  title: Product group
  description: This is a service which can group and sort products by different params
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1
tags:
  - name: group
    description: A product group
paths:
  /group/create:
    post:
      tags:
        - group
      summary: Create group
      operationId: groupCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroupCreateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroupCreateResponse'
  /group/read:
    post:
      tags:
        - group
      summary: Read group
      operationId: groupRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroupReadRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroupReadResponse'
  /group/update:
    post:
      tags:
        - group
      summary: Update group
      operationId: groupUpdate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroupUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroupUpdateResponse'
  /group/delete:
    post:
      tags:
        - group
      summary: Delete group
      operationId: groupDelete
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroupDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroupDeleteResponse'
  /group/search:
    post:
      tags:
        - group
      summary: Search group
      operationId: groupSearch
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroupSearchRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGroupSearchResponse'

components:
  schemas:

    IProductGroupRequest:
      type: object
      description: Basic interface for all requests
      properties:
        requestType:
          type: string
          description: A field-discriminator for calculating a type of request
          example: create
        requestId:
          type: string
          description: Identification of debugs request
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/ProductGroupCreateRequest'
          read: '#/components/schemas/ProductGroupReadRequest'
          update: '#/components/schemas/ProductGroupUpdateRequest'
          delete: '#/components/schemas/ProductGroupDeleteRequest'
          search: '#/components/schemas/ProductGroupSearchRequest'

    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ProductGroupResponseResult:
      type: string
      enum:
        - success
        - error

    IProductGroupResponse:
      type: object
      description: Basic interface for all responses
      properties:
        responseType:
          type: string
          description: A field-discriminator for calculating a type of response
          example: create
        requestId:
          type: string
          description: An identification of debugs response
        result:
          $ref: '#/components/schemas/ProductGroupResponseResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'

      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/ProductGroupCreateResponse'
          read: '#/components/schemas/ProductGroupReadResponse'
          update: '#/components/schemas/ProductGroupUpdateResponse'
          delete: '#/components/schemas/ProductGroupDeleteResponse'
          search: '#/components/schemas/ProductGroupSearchResponse'

    UserId:
      type: string
      description: A user identification
    ProductGroupId:
      type: string
      description: A product group identification
    ProductGroupLock:
      type: string
      description: A version of optimistic locking
    PropertiesId:
      type: string
      description: Product group properties identification to which the group belongs

    BaseProductGroup:
      type: object
      description: The object describes the properties that are the same for create and update
      properties:
        name:
          type: string
          description: Name of a product group
        description:
          type: string
          description: Description of a product group
        propertiesFkId:
          $ref: '#/components/schemas/PropertiesId'

    ProductGroupCreateObject:
      allOf:
        - $ref: '#/components/schemas/BaseProductGroup'

    ProductGroupCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IProductGroupRequest'
        - $ref: '#/components/schemas/ProductGroupRequestDebug'
        - type: object
          properties:
            group:
              $ref: '#/components/schemas/ProductGroupCreateObject'

    ProductGroupReadObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ProductGroupId'

    ProductGroupReadRequest:
      allOf:
        - $ref: '#/components/schemas/IProductGroupRequest'
        - $ref: '#/components/schemas/ProductGroupRequestDebug'
        - type: object
          properties:
            group:
              $ref: '#/components/schemas/ProductGroupReadObject'

    ProductGroupUpdateObject:
      allOf:
        - $ref: '#/components/schemas/BaseProductGroup'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ProductGroupId'
            lock:
              $ref: '#/components/schemas/ProductGroupLock'

    ProductGroupUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IProductGroupRequest'
        - $ref: '#/components/schemas/ProductGroupRequestDebug'
        - type: object
          properties:
            group:
              $ref: '#/components/schemas/ProductGroupUpdateObject'

    ProductGroupDeleteObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/ProductGroupId'
            lock:
              $ref: '#/components/schemas/ProductGroupLock'

    ProductGroupDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IProductGroupRequest'
        - $ref: '#/components/schemas/ProductGroupRequestDebug'
        - type: object
          properties:
            group:
              $ref: '#/components/schemas/ProductGroupDeleteObject'

    ProductGroupSearchFilter:
      type: object
      description: Set of searching filters
      properties:
        searchString:
          type: string
          description: A search string looking for product groups

    ProductGroupSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IProductGroupRequest'
        - $ref: '#/components/schemas/ProductGroupRequestDebug'
        - type: object
          properties:
            productGroupFilter:
              $ref: '#/components/schemas/ProductGroupSearchFilter'

    ProductGroupResponseObject:
      allOf:
        - $ref: '#/components/schemas/BaseProductGroup'
        - type: object
          description: An object which returns as a backend response
          properties:
            id:
              $ref: '#/components/schemas/ProductGroupId'
            ownerId:
              $ref: '#/components/schemas/UserId'
            lock:
              $ref: '#/components/schemas/ProductGroupLock'
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/ProductGroupPermissions'

    ProductGroupPermissions:
      type: string
      description: Available operations with product groups for users
      enum:
        - read
        - update
        - delete
        - makeVisiblePublic
        - makeVisibleOwn
        - makeVisibleGroup

    ProductGroupResponseSingle:
      allOf:
        - type: object
          description: Response with one product group object
          properties:
            group:
              $ref: '#/components/schemas/ProductGroupResponseObject'

    ProductGroupResponseMulti:
      allOf:
        - type: object
          description: A list of found objects
          properties:
            groups:
              type: array
              items:
                $ref: '#/components/schemas/ProductGroupResponseObject'

    ProductGroupCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IProductGroupResponse'
        - $ref: '#/components/schemas/ProductGroupResponseSingle'

    ProductGroupReadResponse:
      allOf:
        - $ref: '#/components/schemas/IProductGroupResponse'
        - $ref: '#/components/schemas/ProductGroupResponseSingle'

    ProductGroupUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IProductGroupResponse'
        - $ref: '#/components/schemas/ProductGroupResponseSingle'

    ProductGroupDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IProductGroupResponse'
        - $ref: '#/components/schemas/ProductGroupResponseSingle'

    ProductGroupSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IProductGroupResponse'
        - $ref: '#/components/schemas/ProductGroupResponseMulti'

    # STUBS ======================
    ProductGroupRequestDebugMode:
      type: string
      enum:
        - prod
        - test
        - stub

    ProductGroupRequestDebug:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/ProductGroupDebug'

    ProductGroupDebug:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/ProductGroupRequestDebugMode'
        stub:
          $ref: '#/components/schemas/ProductGroupRequestDebugStubs'

    ProductGroupRequestDebugStubs:
      type: string
      description: Enumerations of all stubs
      enum:
        - success
        - notFound
        - badId
        - badName
        - badDescription
        - cannotDelete
        - badSearchString